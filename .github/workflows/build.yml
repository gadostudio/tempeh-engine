name: Build Project

on:
  push:
  pull_request:

jobs:
  test_and_build:
    name: "Test and Build"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest] # , macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - uses: humbletim/setup-vulkan-sdk@v1.0.3
      - uses: lukka/get-cmake@latest
      - uses: ashutoshvarma/setup-ninja@master
      - name: Setup Windows
        if: matrix.os == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri https://download.mono-project.com/archive/6.12.0/windows-installer/mono-6.12.0.107-x64-0.msi -OutFile mono.msi
          Start-Process -Verb RunAs msiexec.exe -Wait -ArgumentList '/I mono.msi /quiet'

          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git "${HOME}\depot_tools"

          echo "${HOME}/depot_tools" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          # echo "MONO_DIR=" >> $GITHUB_ENV
      - name: Setup
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt install gnupg ca-certificates
          sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
          echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
          sudo apt update

          sudo apt install mesa-common-dev xcb libxcb-xkb-dev x11-xkb-utils libx11-xcb-dev libxkbcommon-x11-dev libx11-dev mono-devel libxrandr-dev libxcb-xkb-dev libxinerama-dev libxcursor-dev libxi-dev libxext-dev libcurl4-openssl-dev -y

          git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git "${HOME}/depot_tools"

          echo "${HOME}/depot_tools" >> $GITHUB_PATH
          # echo "MONO_DIR=" >> $GITHUB_ENV
      - name: Set up cache
        id: cache-cpm
        uses: actions/cache@v2
        with:
          path: ~/cpm-cache
          key: ${{ runner.os }}-cpm-${{ hashFiles('**/') }}
          restore-keys: |
            ${{ runner.os }}-cpm
      - name: Build
        run: |
          mkdir build
          cd build
          cmake -DTEMPEH_ENABLE_TEST=ON ..
          cmake --build .
      - name: Run test
        run: |
          ./build/test/tempeh_core_test
